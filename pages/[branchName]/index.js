// Display page for single branch and edit
import React from 'react';
import Head from 'next/head';
import styles from '../../styles/Home.module.css';
import Header from '../../components/header';
import MainTaskView from '../../components/mainTaskView';
import Footer from '../../components/footer';
import Link from 'next/link';
import {connect} from 'react-redux';
import { withRouter } from 'next/router'

class Home extends React.Component{
  constructor(props) {
    super(props);

    this.state = {};

  }

  componentDidMount() {
  }

  render(){
    return (
      <div className={styles.container}>
        <Head>
          <title>{this.props.router.query.branchName}</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
  
        <Header></Header>
  
        <main className={styles.main + ' bg-gray-100 relative'}>
          <div className='sm:top-28 top-24 lg:right-7 right-2 lg:left-80 left-20 px-10 absolute w-auto'>
            <div className='container flex flex-row mx-auto items-center'>
              <h1 className='text-2xl font-semibold'>Branch -  {this.props.router.query.branchName} {this.props.router.query.id} {this.props.branchLoading ? 'true' : 'false'}</h1>
              <div className='flex-grow' />
              <button className='outline-none focus:outline-none bg-blue-200 text-blue-700 ring-2 ring-blue-600 hover:bg-blue-500 hover:text-white rounded-md p-2 py-1'>
                <Link href={{
                  pathname: '/[branchName]/edit',
                  query: { branchName: this.state.branchName, id: this.state.id },
                }} as={`/${this.state.branchName}/edit`}>Edit</Link>
              </button>
            </div>
          </div>
          {/*<MainTaskView task={this.props.task}></MainTaskView>*/}
        </main>
  
        <Footer></Footer>
      </div>
    );
  }
}

const mapStateToProps = () => ({

});

const mapDispatchToProps = {

};

export default connect(mapStateToProps, mapDispatchToProps)(withRouter(Home));